// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "upload.proto" (syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message UploadPostFile
 */
export interface UploadPostFile {
    /**
     * @generated from protobuf field: optional bytes file = 1;
     */
    file?: Uint8Array;
    /**
     * @generated from protobuf field: string category = 2;
     */
    category: string;
    /**
     * @generated from protobuf field: uint32 index = 3;
     */
    index: number;
    /**
     * @generated from protobuf field: map<string, string> metadata = 4;
     */
    metadata: {
        [key: string]: string;
    };
}
/**
 * @generated from protobuf message UploadPostRequest
 */
export interface UploadPostRequest {
    /**
     * @generated from protobuf field: repeated UploadPostFile files = 1;
     */
    files: UploadPostFile[];
}
/**
 * @generated from protobuf message UploadPatchFile
 */
export interface UploadPatchFile {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: optional bytes file = 2;
     */
    file?: Uint8Array;
    /**
     * @generated from protobuf field: optional uint32 index = 3;
     */
    index?: number;
    /**
     * @generated from protobuf field: map<string, string> metadata = 4;
     */
    metadata: {
        [key: string]: string;
    };
}
/**
 * @generated from protobuf message UploadPatchRequest
 */
export interface UploadPatchRequest {
    /**
     * @generated from protobuf field: repeated UploadPatchFile files = 1;
     */
    files: UploadPatchFile[];
}
// @generated message type with reflection information, may provide speed optimized methods
class UploadPostFile$Type extends MessageType<UploadPostFile> {
    constructor() {
        super("UploadPostFile", [
            { no: 1, name: "file", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "category", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "index", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "metadata", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UploadPostFile
 */
export const UploadPostFile = new UploadPostFile$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadPostRequest$Type extends MessageType<UploadPostRequest> {
    constructor() {
        super("UploadPostRequest", [
            { no: 1, name: "files", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UploadPostFile }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UploadPostRequest
 */
export const UploadPostRequest = new UploadPostRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadPatchFile$Type extends MessageType<UploadPatchFile> {
    constructor() {
        super("UploadPatchFile", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "file", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "metadata", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UploadPatchFile
 */
export const UploadPatchFile = new UploadPatchFile$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadPatchRequest$Type extends MessageType<UploadPatchRequest> {
    constructor() {
        super("UploadPatchRequest", [
            { no: 1, name: "files", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UploadPatchFile }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UploadPatchRequest
 */
export const UploadPatchRequest = new UploadPatchRequest$Type();
